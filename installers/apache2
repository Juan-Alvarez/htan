#!/bin/bash

#======================================================================
# Performs installation and configuration of Apache2.
#
# USAGE:
#   apache2 [--debug] [--version] [--help] [--nocolor]
#
# PROJECT:
#   Hosting tools by Aleksey Nemiro (HTAN)
#
# REQUIREMENTS:
#   Debian 7/8 or Ubuntu 14+, sudo
#
# AUTHOR:
#   Aleksey Nemiro
#   http://aleksey.nemiro.ru/
#   https://github.com/alekseynemiro/
#   <aleksey@nemiro.ru>
#   <aleksey.nemiro@gmail.com>
#
# VERSION:
#   1.0.1
#
# CREATED:
#   14.09.2015
#
# REVISION:
#   03.06.2016
#
# COPYRIGHT:
#   © Aleksey Nemiro, 2015-2016. All rights reserved.
#
# LICENSE:
#   Apache License Version 2.0
#   http://www.apache.org/licenses/LICENSE-2.0
#
# HTAN_NAME:
#   Apache2
#
# HTAN_CATEGORY:
#   Web Server
#
# HTAN_OPTIONAL:
#   true
#======================================================================

# Including common
if [[ -z "$HTAN_INCLUDED_TOOLS" ]]; then
  {
    if [[ "${0##*/}" != "apache2" ]]; then
      printf "Including the common …"
    fi
    if source "$(cd $(dirname $0) && pwd)/../tools/common"; then
      if [[ "${0##*/}" != "apache2" ]]; then
        OK
      fi
    fi
  } || {
    echo ""
    echo -e "\033[1;31m$(gettext "Failed to include the common.")\033[0m"
    exit 1
  }
fi

# Including tools
IncludeTool package service config

InstallApache()
{
  if ! $HTAN_NOHEADERS; then
    Line =
    Message "$(gettext "# Installing and configuring %s.")" "Apache2" -s="$DEF_STYLE_HEADER"
    Line =
  fi

  if ! $HTAN_INSTALL_CONFIRMED; then
    if ! Confirm "$(gettext "Do you want to install %s?")" "Apache2" -no; then
      Line
      Message "$(gettext "%s has not been installed.")" "Apache2"
      return
    else
      Line
    fi
  fi

  ServiceStop nginx
  Line

  PackageInstall apache2 -confirm=false -title="Apache2"
  Line

  if [[ "$SYS_OS_NAME" != "Ubuntu" ]]; then
    PackageInstall apache2-mpm-itk -confirm=false
    Line
  # else
    # if sudo apache2ctl -M 2>/dev/null | grep -q mpm_event; then
    #   Execute -c="sudo a2dismod -f mpm_event >/dev/null 2>&1" -m="$(gettext "Disabling %s …")" -a="mpm_event" -sp="$DEF_STYLE_ACTION_PROC" -sc="$DEF_STYLE_ACTION_COMP"
    #   Line
    # fi
  fi

  PackageInstall libapache2-mod-rpaf -confirm=false
  Line

  ServiceStop apache2
  Line

  # disable autoindex (prohibition display of directories)
  if sudo apache2ctl -M 2>/dev/null | grep -q autoindex; then
    Execute -c="sudo a2dismod -f autoindex >/dev/null 2>&1" -m="$(gettext "Disabling %s …")" -a="autoindex" -sp="$DEF_STYLE_ACTION_PROC" -sc="$DEF_STYLE_ACTION_COMP"
  fi

  # config apache
  local config="/etc/apache2/ports.conf"

  # SetValue $config NameVirtualHost "127.0.0.1:8080" // obsolete
  SetValue $config Listen "127.0.0.1:8080"

  config="/etc/apache2/sites-enabled/000-default.conf"

  if [[ ! -f "$config" ]]; then
    config="/etc/apache2/sites-enabled/000-default"
  fi

  sudo sed -i "s/\(<VirtualHost\)\(.*\)\(>\)/\1 127.0.0.1:8080\3/" $config >> $HTAN_LOG 2>&1
  wait

  # rewriter
  # ln -s /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load

  # config checking
  Execute -c="sudo apachectl -t >> $HTAN_LOG 2>&1" -m="$(gettext "Testing for errors …")" -sp="$DEF_STYLE_ACTION_PROC" -sc="$DEF_STYLE_ACTION_COMP"
  Line

  # testing
  ServiceRestart apache2
  Line

  ServiceStart nginx
  Line

  Execute -c='sudo netstat -atunp | grep -Eq "127.0.0.1:8080.*apache" >> $HTAN_LOG 2>&1' -m="$(gettext "Testing %s …")" -a="Apache" -sp="$DEF_STYLE_ACTION_PROC" -sc="$DEF_STYLE_ACTION_COMP"

  if [[ "$?" != 0 ]]; then
    Line
    Message "$(gettext "Perhaps Apache is configured incorrectly.")" -s="$DEF_STYLE_ERROR"
    Message "$(gettext "For details, see the error log of Apache:")" -s="$DEF_STYLE_ERROR"
    Message "sudo nano /var/log/apache2/error.log" -s="$DEF_STYLE_ERROR"
    Message "$(gettext "Check the /etc/apache2/ports.conf and /etc/apache2/sites-enabled/000-default.conf.")" -s="$DEF_STYLE_ERROR"
    Message "$(gettext "To work with Nginx, Apache must listen on port %s.")" -a="127.0.0.1:8080" -s="$DEF_STYLE_ERROR"
  fi

  Line
  Message "$(gettext "Done.")"
}

InstallApache