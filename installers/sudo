#!/bin/bash

#======================================================================
# Performs installation and configuration of sudo.
#
# USAGE:
#   sudo [--debug] [--version] [--help] [--nocolor] [--tested]
#
# PROJECT:
#   Hosting tools by Aleksey Nemiro (HTAN)
#
# REQUIREMENTS:
#   Debian 7/8
#
# AUTHOR:
#   Aleksey Nemiro
#   http://aleksey.nemiro.ru/
#   https://github.com/alekseynemiro/
#   <aleksey@nemiro.ru>
#   <aleksey.nemiro@gmail.com>
#
# VERSION:
#   1.0.2
#
# CREATED:
#   23.09.2015
#
# REVISION:
#   25.05.2016
#
# COPYRIGHT:
#   © Aleksey Nemiro, 2015-2016. All rights reserved.
#
# LICENSE:
#   Apache License Version 2.0
#   http://www.apache.org/licenses/LICENSE-2.0
#
# HTAN_NAME:
#   Sudo - substitute user and do
#
# HTAN_CATEGORY:
#   Security
#
# HTAN_OPTIONAL:
#   false
#======================================================================

# Including common
if [[ -z "$HTAN_INCLUDED_TOOLS" ]]; then
  {
    if [[ "${0##*/}" != "sudo" ]]; then
      printf "Including the common …"
    fi
    if source "$(cd $(dirname $0) && pwd)/../tools/common"; then
      if [[ "${0##*/}" != "sudo" ]]; then
        OK
      fi
    fi
  } || {
    echo ""
    echo -e "\033[1;31m$(gettext "Failed to include the common.")\033[0m"
    exit 1
  }
fi

# Including tools
IncludeTool package service config

InstallSudo()
{
  # tested version
  local tested
  if [[ "$HTAN_TESTED" == true ]]; then
    tested="-version=1.8.10"
  fi
  # // --

  if ! $HTAN_NOHEADERS; then
    Line =
    Message "$(gettext "# Installing and configuring %s.")" "sudo" -s="$DEF_STYLE_HEADER"
    Line =
  fi

  if PackageInstalled sudo; then
    Message "$(gettext "The system found a package %s. Installing is not required.")." "sudo"
    Line

    local need_config="-no"

    # is not root and not sudo user
    if [[ "$USER" != "root" ]]; then
      (groups "$USER" 2> /dev/null | grep -q "\bsudo\b") || (need_config="-yes")
      Debug "USER: $USER=$need_config"
    elif [[ "$USER" = "root" && "$HTAN_USER" != "root" ]]; then
      (groups "$HTAN_USER" 2> /dev/null | grep -q "\bsudo\b") || (need_config="-yes")
      Debug "HTAN_USER: $HTAN_USER=$need_config"
    fi

    if ! Confirm "$(gettext "Would you like to configure %s?")" "sudo" $need_config; then
      Line
      Message "$(gettext "Operation canceled by the user.")"
      return
    fi
  else
    Message "$(gettext "Sudo is a program that allows users to run programs with the security privileges of another user, by default the superuser.")"
    Line
    if ! PackageInstall sudo -confirm=false -root $tested; then
      Error "$(gettext "An error occurred while installing sudo. Continued impossible.")"
    fi
    Line
  fi

  Message "$(gettext "Configuring %s.")" "sudo"
  Line

  local add_other_user="-yes"
  if [[ "$USER" != "root" ]]; then
    Message "$(gettext "Adding %s to the %s …")" "$USER" "sudo" -n
    {
      # addgroup $USER sudo
      (su root -c "usermod -a -G sudo $USER" > /dev/null 2>&1; wait) && (OK; add_other_user="-no")
    } || {
      Fail
    }
    Line
  fi

  Message "$(gettext "Trusted users must be members of the sudo group.")"
  Line

  local username
  local htan_user_added=false

  if [[ "$USER" == "root" ]]; then
    # get username by id=1000
    username="$(grep 1000 /etc/passwd | cut -f1 -d:)"
  fi

  while true; do

    if ! Confirm "$(gettext "Do you want to add a new member to the %s?")" "sudo" $add_other_user; then
      break
    fi

    Line

    Message "$(gettext "Enter a username, which must be added to the %s:")" "sudo" -s="$DEF_STYLE_ENTER"

    if [[ -n "$username" ]]; then
      Read -e -i "$username" username
    else
      Read username
    fi

    if [[ -n "$username" ]]; then
      Line
      Message "$(gettext "Adding %s to the %s …")" "$username" "sudo" -n -s="$DEF_STYLE_ACTION"

      if id -u "$username" >/dev/null 2>&1; then
        {
          # add $username to sudo group
          (su root -c "usermod -a -G sudo $username" > /dev/null 2>&1; wait) && 
          {
            OK
          }
        } || {
          Fail
        }

        username=""
      else
        Fail
        Message "$(gettext "Error: User %s not found.")" "$username" -s="$DEF_STYLE_ERROR"
      fi

      Line
    else
      Message "$(gettext "Error: Username is required. Value cannot be empty.")" -s="$DEF_STYLE_ERROR"
      add_other_user="-no"
    fi

  done

  Line
  ServiceRestart sudo

  Line
  Message "$(gettext "Done.")"
}

InstallSudo